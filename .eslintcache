[{"/home/salwo92/Documenti/react/weather-app-react/src/index.js":"1","/home/salwo92/Documenti/react/weather-app-react/src/App.js":"2","/home/salwo92/Documenti/react/weather-app-react/src/components/TodayWeather/TodayWeather.jsx":"3","/home/salwo92/Documenti/react/weather-app-react/src/components/TodaySpecs/TodaySpecs.jsx":"4","/home/salwo92/Documenti/react/weather-app-react/src/components/DaysWeather/DaysWeather.jsx":"5","/home/salwo92/Documenti/react/weather-app-react/src/components/InputSearch/InputSearch.jsx":"6"},{"size":147,"mtime":1610275014677,"results":"7","hashOfConfig":"8"},{"size":5106,"mtime":1610387839580,"results":"9","hashOfConfig":"8"},{"size":2039,"mtime":1610385173704,"results":"10","hashOfConfig":"8"},{"size":1289,"mtime":1610387003775,"results":"11","hashOfConfig":"8"},{"size":1523,"mtime":1610384928798,"results":"12","hashOfConfig":"8"},{"size":315,"mtime":1610386787619,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"h22x6b",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/home/salwo92/Documenti/react/weather-app-react/src/index.js",[],["29","30"],"/home/salwo92/Documenti/react/weather-app-react/src/App.js",[],"/home/salwo92/Documenti/react/weather-app-react/src/components/TodayWeather/TodayWeather.jsx",["31","32"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card'\nimport Grid from '@material-ui/core/Grid';\nimport { CardContent, Typography } from '@material-ui/core';\nimport 'fontsource-roboto';\nimport TodaySpecs from '../TodaySpecs/TodaySpecs';\nimport DaysWeather from '../DaysWeather/DaysWeather';\nimport styled from 'styled-components'\n\n\nconst useStyles = makeStyles ({\n   root: {\n    /* minWidth: 275, */\n    \n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 22,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  box:{textAlign:'center'}\n});\n\n  const StyledDiv = styled.div`\n  margin: 10px;\n  \n  width:100%;\n\n\n  @media all (max-width:320px) {\n    width: 100% ;\n    background: purple;\n  } \n    @media all (max-width:768px) {\n    width: calc(100% / 6) ;\n  } \n`\n\nexport default function TodayWeather({data}) {\n  const classes = useStyles();\n\n\n  if(!data.weather){\n      return 'Loading...'\n  }\n\n    return (\n    <StyledDiv>\n      <Grid container spacing={1}>\n\n        <Grid item xs={12} sm={8} md={6} lg={6}>\n            <Card className={classes.root}>\n\n            <CardContent className={classes.box} item xs>\n                <Typography variant=\"h1\" component=\"h2\" className={classes.title}>{data.city}, {data.country}</Typography>\n                <Typography className={classes.title}>{new Date(data.ts * 1000).toLocaleDateString(\n              \"it-IT\"\n            )}</Typography>\n                <Typography className={classes.title}>{Math.round(data.temp)} Â°C</Typography>\n                <img src={`https://www.weatherbit.io/static/img/icons/${data.weather.icon}.png`} alt=\"\"/>\n                <Typography className={classes.title}>{data.weather.description}</Typography>\n            </CardContent>\n\n            </Card>\n        </Grid>\n            <TodaySpecs data={data}/>           \n        \n      </Grid>\n                 \n    </StyledDiv>\n    );\n}\n\n\n","/home/salwo92/Documenti/react/weather-app-react/src/components/TodaySpecs/TodaySpecs.jsx",["33"],"/home/salwo92/Documenti/react/weather-app-react/src/components/DaysWeather/DaysWeather.jsx",["34","35"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card'\nimport Grid from '@material-ui/core/Grid';\nimport styled from 'styled-components'\nimport { CardContent, Typography } from '@material-ui/core';\n\nconst StyledDiv = styled.div`\n  margin: 10px;\n  \n  width:100%;\n\n\n  @media all (max-width:320px) {\n    width: 100% ;\n    background: purple;\n  } \n    @media all (max-width:768px) {\n    width: calc(100% / 6) ;\n  } \n`\n\nconst useStyles = makeStyles ({\n   root: {\n    \n    \n  },\n  icon:{\n    width:'60px',\n    height:'60px',\n  },\n  center:{\n    textAlign:'center'\n  },\n  title: {\n    fontSize: 16,\n    padding: 8\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  box:{textAlign:'center'}\n});\n\nexport default function DaysWeather(props) {\n    const classes = useStyles();\n    //console.log(props);\n    return (\n      <StyledDiv>\n\n        <Card  className={classes.root}>\n            \n                <Typography  variant=\"h1\" component=\"h2\" className={classes.title}>{props.ts} </Typography>\n                <img className={classes.icon} src={`https://www.weatherbit.io/static/img/icons/${props.weather.icon}.png`} alt=\"\"/>\n                <Typography className={classes.title}>{Math.round(props.max)} C</Typography>\n                <Typography className={classes.title}>{Math.round(props.min)} C</Typography>\n                <Typography className={classes.title}> {Math.round(props.precip)} mm/h</Typography>\n            \n        </Card>\n\n      </StyledDiv>\n    )\n}\n\n\n","/home/salwo92/Documenti/react/weather-app-react/src/components/InputSearch/InputSearch.jsx",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":3,"column":8,"nodeType":"42","messageId":"43","endLine":3,"endColumn":13},{"ruleId":"40","severity":1,"message":"44","line":9,"column":8,"nodeType":"42","messageId":"43","endLine":9,"endColumn":19},{"ruleId":"40","severity":1,"message":"41","line":3,"column":8,"nodeType":"42","messageId":"43","endLine":3,"endColumn":13},{"ruleId":"40","severity":1,"message":"45","line":4,"column":8,"nodeType":"42","messageId":"43","endLine":4,"endColumn":12},{"ruleId":"40","severity":1,"message":"46","line":6,"column":10,"nodeType":"42","messageId":"43","endLine":6,"endColumn":21},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'DaysWeather' is defined but never used.","'Grid' is defined but never used.","'CardContent' is defined but never used.","no-global-assign","no-unsafe-negation"]